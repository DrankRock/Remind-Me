<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fhtOp5MAAAAASUVORK5CYII=
</value>
  </data>
</root>